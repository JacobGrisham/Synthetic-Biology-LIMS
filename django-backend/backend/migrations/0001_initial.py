# Generated by Django 3.1.5 on 2021-04-12 05:48

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='company id')),
                ('name', models.CharField(max_length=50, verbose_name='company name')),
                ('tier', models.CharField(choices=[('T3', 'Tier Three: 100-1000 users'), ('T2', 'Tier Two: 10-100 users'), ('T1', 'Tier One: 1-10 users'), ('TR', 'Trial')], default='TR', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='instrument id')),
                ('name', models.CharField(max_length=300, verbose_name='instrument name')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='project id')),
                ('name', models.CharField(max_length=300, verbose_name='project name')),
                ('description', models.TextField(verbose_name='project description')),
                ('modified_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='date and time the project was last modified')),
                ('started_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='date and time the project started')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='date and time the project was last updated')),
                ('ended_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='date and time the project ended')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='database id')),
                ('status', models.CharField(blank=True, choices=[('DL', 'Delayed'), ('PN', 'Pending'), ('RN', 'Running'), ('FN', 'Finished')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='user id')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, verbose_name='username')),
                ('password', models.CharField(max_length=128, verbose_name='user encrypted password')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='user email address')),
                ('retired', models.BooleanField(default=False, help_text='Designates whether this user left the company. Unselect this instead of deleting accounts.', verbose_name='retired')),
                ('group', models.CharField(choices=[('LM', 'Lab Manager'), ('PM', 'Project Manager'), ('LT', 'Lab Technician'), ('CL', 'Client'), ('GS', 'Guest'), ('OT', 'Other')], default='OT', max_length=2)),
                ('employee_of', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_employee', to='backend.company', verbose_name='user employed by company')),
            ],
        ),
        migrations.CreateModel(
            name='Protocol_Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='database id')),
                ('protocol_step', models.PositiveSmallIntegerField(verbose_name='step number')),
                ('instructions', models.TextField(verbose_name='protocol instructions')),
                ('input_name', models.CharField(max_length=300, verbose_name='input name')),
                ('input_amount', models.DecimalField(decimal_places=10, max_digits=19, verbose_name='input item amount')),
                ('input_units', models.CharField(max_length=20, verbose_name='units of measurement for the input item amount')),
                ('output_name', models.CharField(max_length=300, verbose_name='product name')),
                ('output_amount', models.DecimalField(decimal_places=10, max_digits=19, verbose_name='product amount')),
                ('output_units', models.CharField(max_length=20, verbose_name='units of measurement for the product amount')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrument', to='backend.instrument', verbose_name='instrument required for a protocol')),
            ],
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='protocol id')),
                ('name', models.CharField(max_length=300, verbose_name='protocol name')),
                ('description', models.TextField(verbose_name='protocol description')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date and time the protocol was created')),
                ('modified_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='date and time the protocol was last modified')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='protocol_author', to='backend.user', verbose_name='user that authored the protocol')),
            ],
        ),
        migrations.CreateModel(
            name='Project_Protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='project and protocol pairing id')),
                ('project_step', models.PositiveSmallIntegerField(verbose_name='step number')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.project', verbose_name='project that uses a protocol')),
                ('protocol_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.protocol', verbose_name='protocol added to a project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_author', to='backend.user', verbose_name='user that authored the project'),
        ),
        migrations.AddField(
            model_name='project',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_project', to='backend.company', verbose_name='item associated with company'),
        ),
        migrations.AddField(
            model_name='project',
            name='project_manager',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_manager', to='backend.user', verbose_name='user that the assigned project manager'),
        ),
        migrations.AddField(
            model_name='project',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_status', to='backend.status', verbose_name='status of project'),
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='job id')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date and time the job started')),
                ('ended_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='date and time the job ended')),
                ('success', models.BooleanField(blank=True, default=None)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_project', to='backend.project', verbose_name='project id associated with job')),
                ('project_step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_project_step', to='backend.project', verbose_name='project step associated with job')),
                ('protocol_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_protocol', to='backend.protocol', verbose_name='id of protocol used in job')),
                ('protocol_step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_protocol_step', to='backend.protocol', verbose_name='protocol step number in job')),
                ('status', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_status', to='backend.status', verbose_name='status of job')),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.user', verbose_name='technician who worked on job')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='item id')),
                ('barcode', models.CharField(blank=True, max_length=150, verbose_name='item barcode')),
                ('name', models.CharField(max_length=300, verbose_name='item name')),
                ('type', models.CharField(max_length=150, verbose_name='item type')),
                ('description', models.TextField(verbose_name='item description')),
                ('total_amount', models.DecimalField(decimal_places=10, max_digits=19, verbose_name='item amount')),
                ('units', models.CharField(max_length=20, verbose_name='units of measurement for the total item amount')),
                ('location', models.CharField(max_length=300, verbose_name='item location')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date the item was created')),
                ('modified_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date and time the item was last modified')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_item', to='backend.company', verbose_name='item associated with company')),
            ],
        ),
        migrations.CreateModel(
            name='History_of_Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='item historical record id')),
                ('amount_delta', models.DecimalField(decimal_places=10, max_digits=19, verbose_name='change in the item amount')),
                ('units', models.CharField(max_length=20, verbose_name='item amount units of measurement')),
                ('location', models.CharField(max_length=300, verbose_name='item location')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date and time the item was used in a a job')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.item', verbose_name='item id')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='used_in_job', to='backend.job', verbose_name='job id associated with the consumption in a job')),
                ('synthesized_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='synthesized_by_job', to='backend.job', verbose_name='job id associated with the synthesis of the product')),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='used_by_technician', to='backend.item', verbose_name='technician who used the item')),
            ],
        ),
    ]
